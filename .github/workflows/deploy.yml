name: Deploy to Server

on:
  push:
    branches:
      - "**"

permissions:
  contents: write

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Set up Git user
        shell: bash
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Set up authentication
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Run version bump script
        id: version_bump
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          BRANCH_NAME=${GITHUB_REF#refs/heads/}

          echo "Branch name is '$BRANCH_NAME'"
          bash ./bump_version.sh "$COMMIT_MESSAGE" "$BRANCH_NAME"

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install

      - name: Build project
        env:
          BASE_URL: "/${{ github.ref_name }}"
        run: yarn build

      - name: Deploy to Server
        env:
          BASE_DIR: ${{ secrets.BASE_DIR }}
          NEW_VERSION: ${{ steps.version_bump.outputs.NEW_VERSION }}
        run: |
          # Change directory to BASE_DIR
          cd $BASE_DIR || { echo "Failed to change directory to $BASE_DIR." >&2; exit 1; }

          # Create the destination folder if it doesn't exist
          mkdir -p $NEW_VERSION || { echo "Failed to create destination folder." >&2; exit 1; }

          # Move the built files to the destination folder
          cp -r $GITHUB_WORKSPACE/dist/* $NEW_VERSION/ || { echo "Failed to copy files." >&2; exit 1; }

          echo "Deployment completed successfully."

          # Display disk usage of the destination folder
          echo "Displaying disk usage of the destination folder..."
          du -sh $NEW_VERSION
